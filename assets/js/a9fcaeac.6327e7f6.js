"use strict";(self.webpackChunkswiftui_modifiers_handbook=self.webpackChunkswiftui_modifiers_handbook||[]).push([[122],{4454:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/offset_animation-d9d1301598be27a5be05e9933c723a7e.gif"},5606:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/offset-9654e06ee6572bae5a762e1740a96d76.png"},6404:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Layout/offset","title":"offset(_:)","description":"What it is:","source":"@site/docs/Layout/offset.md","sourceDirName":"Layout","slug":"/Layout/offset","permalink":"/swiftui-modifiers-handbook-site/docs/Layout/offset","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Layout/offset.md","tags":[],"version":"current","frontMatter":{"id":"offset","title":"offset(_:)","sidebar_label":"Offset"},"sidebar":"tutorialSidebar","previous":{"title":"Frame - Basic","permalink":"/swiftui-modifiers-handbook-site/docs/Layout/frame"},"next":{"title":"Padding","permalink":"/swiftui-modifiers-handbook-site/docs/Layout/padding"}}');var n=s(4848),o=s(8453);const r={id:"offset",title:"offset(_:)",sidebar_label:"Offset"},a=void 0,l={},d=[{value:"What it is:",id:"what-it-is",level:3},{value:"Parameters:",id:"parameters",level:3},{value:"When to use:",id:"when-to-use",level:3},{value:"Watch out for:",id:"watch-out-for",level:3},{value:"<code>.offset(_:)</code> in action:",id:"offset_-in-action",level:3},{value:"How it looks in Xcode:",id:"how-it-looks-in-xcode",level:3},{value:"Try <code>.offset(_:)</code> yourself!",id:"try-offset_-yourself",level:3}];function c(e){const t={blockquote:"blockquote",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"what-it-is",children:"What it is:"}),"\n",(0,n.jsxs)(t.p,{children:["Moves a view\u2019s content ",(0,n.jsx)(t.strong,{children:"without changing its original frame"})," - like sliding it around a glass pane, while the actual container stays put."]}),"\n",(0,n.jsx)(t.p,{children:"This is telling SwiftUI:"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:'"Keep the box where it is\u2026 but shift what\u2019s inside by this much."'}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"offset:"}),": A CGSize with horizontal ",(0,n.jsx)(t.strong,{children:"(width)"})," and vertical ",(0,n.jsx)(t.strong,{children:"(height)"})," values","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Example"}),": ",(0,n.jsx)(t.code,{children:"CGSize(width: 20, height: -10)"})," moves it 20 pts right and 10 pts up."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"when-to-use",children:"When to use:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["You want to ",(0,n.jsx)(t.strong,{children:"nudge"})," a view around without breaking layout structure."]}),"\n",(0,n.jsxs)(t.li,{children:["You need ",(0,n.jsx)(t.strong,{children:"animations or transitions"})," where the views float in or out."]}),"\n",(0,n.jsxs)(t.li,{children:["You\u2019re layering views and want precise control over ",(0,n.jsx)(t.strong,{children:"visual position"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["You want to ",(0,n.jsx)(t.strong,{children:"show or hide something"})," subtly by sliding it in/out."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"watch-out-for",children:"Watch out for:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.strong,{children:"original frame stays in place"})," \u2014 so layout boundaries won\u2019t change."]}),"\n",(0,n.jsx)(t.li,{children:"Stacking offsets can get messy \u2014 avoid piling on too many."}),"\n",(0,n.jsxs)(t.li,{children:["It\u2019s ",(0,n.jsx)(t.strong,{children:"not a substitute"})," for layout \u2014 ",(0,n.jsx)(t.strong,{children:"don\u2019t use it to \u201cfix\u201d broken stacks"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.h3,{id:"offset_-in-action",children:[(0,n.jsx)(t.code,{children:".offset(_:)"})," in action:"]}),"\n",(0,n.jsx)("div",{style:{marginLeft:"2rem",marginTop:"2rem",width:"80%"},children:(0,n.jsx)("img",{src:s(4454).A,alt:"Frame animation example",style:{width:"100%",borderRadius:"8px"}})}),"\n",(0,n.jsx)(t.h3,{id:"how-it-looks-in-xcode",children:"How it looks in Xcode:"}),"\n",(0,n.jsx)("div",{style:{marginLeft:"2rem",marginTop:"2rem",width:"80%"},children:(0,n.jsx)("img",{src:s(5606).A,alt:"Frame code example",style:{borderRadius:"12px",width:"100%"}})}),"\n",(0,n.jsxs)(t.h3,{id:"try-offset_-yourself",children:["Try ",(0,n.jsx)(t.code,{children:".offset(_:)"})," yourself!"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'struct OffsetModifier: View {\n    var body: some View {\n        VStack(spacing: 40) {\n            Text("Offset 0")\n                .border(Color.gray)\n\n            Text("Offset 20x, 25y")\n                .border(Color.green)\n                .offset(CGSize(width: 20, height: 25))\n                .border(Color.red)\n        }\n    }\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var i=s(6540);const n={},o=i.createContext(n);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);